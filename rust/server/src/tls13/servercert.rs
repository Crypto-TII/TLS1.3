//! Server Certificate and private keys stored here

use crate::config::*;
use crate::tls13::utils;
use crate::tls13::x509;
use crate::tls13::x509::*;
use crate::sal_m::sal;
use std::fs::File;
use std::io::{BufRead, BufReader};
use std::path::Path;

// IBE secret keys associated with this URL
pub const ID: &str = "localhost";
pub const BFSK: &str = "040ec014966d3442e85ed19b46044d9655d8ed91ef05e6678e57a51cfd9202c8dad2c854850b09fc919b6cb000a2f5b05801b767a87194d62d45cb1b1a9cd15b63ea733770361de22f64946631c2c21826d8abf884e4d07159d54c91b79662e2e4050ae782a9fb9394853669540b4cb1f46098ca690bd572b9c47587ca12a2f2c268e1a22ebc0d752f95bcf926a8b6e2cb1452dc7bf03eab18c5b68822b0da20279d1e8997a759637abdffec93f4c985f9256deed1cca5c50e2c37ae6c10c67c13";
pub const PQSK: [i16; 1024] = [17427,5481,11717,2709,18990,-6238,-17547,2027,4061,-4631,-23,3412,12873,-8107,-1699,6678,-1083,1705,-6004,2774,16557,4366,-10825,10903,1756,6881,-25568,-322,-17991,-13050,8943,7500,7358,10447,7829,6314,-6985,-9464,13680,7832,7106,15844,5551,13145,1950,-12963,3632,6773,-128,8671,17307,2054,3956,-2813,1548,12496,14130,8814,-27578,-3152,-408,-983,-16798,-2807,-11168,219,11395,6367,-9928,-2227,-15149,-507,7877,4774,-6751,6896,-2466,-11105,24353,24179,-3902,25488,-3414,8697,11411,853,-1340,-1297,4458,-15319,3430,-3586,10809,-2748,-7217,6033,6831,-18159,12216,4395,-1343,-1450,-4613,3367,-13378,13129,5442,2509,3152,8105,12764,-6831,6600,-2091,2901,7563,14642,-19547,14228,-12571,10836,4384,15431,-3523,-5408,-1546,-14063,5632,-24408,-27872,-5032,7874,9251,-9140,18705,-8817,-8968,16093,-12684,-1129,-6338,-5697,4893,-5885,-3056,9635,7287,-13307,-7784,3713,-1377,-734,15123,-1801,6724,4171,-11671,5203,7084,-4160,10483,1852,19384,13593,13166,5641,8138,-16547,16902,1112,-6621,-7555,15165,1320,20371,18137,6126,14740,21371,17539,-8372,8527,1770,2705,9349,-5665,-2176,10560,3785,9924,-5357,1208,-19450,-10552,-2090,-1079,-12323,9823,25139,14484,15436,-3052,14406,13746,-8160,-10664,-4265,-7453,-6872,6781,-15771,-1497,-2909,14834,-18087,-13590,-3843,-544,18322,7586,3025,11815,-13969,-14900,1405,-7978,6093,-21992,1881,-2547,12628,4075,834,19042,1403,-905,-13397,-5,-19527,1712,23459,13483,-3476,3356,12249,17258,8353,8105,-3952,-17172,-8404,-790,5649,-15055,-9041,-11029,983,6834,28652,-5093,4886,8837,5515,-1090,-9781,4875,2422,-817,-21674,-1930,-4324,4672,13993,-16685,-4886,-4790,-6134,6371,-821,5939,-2235,-2512,2815,-7837,-15251,-14046,-10248,14277,-8793,-4343,10246,-2302,-9660,-21118,-8149,6277,26173,3432,15103,6285,-7489,-29638,-115,7942,1804,9079,658,5051,-6485,-4237,-21995,-7406,-9505,5514,-6678,8021,-8367,-6990,22168,1723,-2296,10631,7647,-5836,-12666,10618,2984,-11028,-17173,5594,-4342,-1759,5762,-6956,12594,-531,6537,-978,10586,1114,-4752,9331,-1525,-2180,10271,-1773,243,7320,533,1791,-4502,6539,5963,-16519,-1354,-3793,-3347,-19503,-1501,-22213,-8743,10695,-2720,15813,-481,-2703,883,-910,-3096,3492,9343,5903,-10007,1340,131,-14933,22394,-16576,-3805,1933,3223,15998,12066,11904,-12856,13939,-4631,4844,-89,-4798,-9692,-1444,5285,-8968,3751,8432,18677,-2560,-8470,15395,-4829,-8029,5974,-23551,-9051,-6994,-15820,227,-11797,19615,-5912,8078,-13472,-781,8102,3253,-4004,17975,-3340,-2173,3644,14622,8206,-13381,3951,7222,-12626,14391,3153,12489,-12229,-11891,12544,1630,-2324,-2795,361,-12797,905,14805,-5740,8113,-7665,-2401,-6117,15976,8919,5291,4653,21564,-9251,-13751,852,-18317,-5742,-13060,-5225,-6150,-4787,-14565,-3530,-15265,16879,-22087,-16352,724,-6708,10304,6029,19506,14774,-7612,-17372,6290,11876,9281,1659,-12775,3602,8848,5269,6765,-1887,-7459,-3589,-653,-6389,5968,9236,-7762,-11643,5681,4340,-9449,-15397,12826,-8248,10367,1186,3180,-8531,6271,-9565,7304,-6442,6138,13320,8819,-19209,-2200,18585,2849,-13497,11098,-1967,-5841,2528,-11657,17708,14126,10766,19193,-5431,12741,-12181,-8406,5901,12205,-7833,-13666,-10544,-8832,-16072,2052,-14619,2178,13462,-4979,12481,11187,15216,-1316,27502,6074,-13444,-3759,-4750,-1542,-20890,9203,36,20093,15623,-2406,14113,-9608,-2424,12360,-1530,17645,-8374,-22849,9537,7094,7238,1764,8568,-10396,1248,652,11405,9663,-18563,18092,-16995,-29299,-13502,-15856,6506,57,807,18225,-123,-9658,-26877,2774,3995,-5151,58,-2128,7043,-7686,-8682,-11509,5420,382,-380,-8479,-5230,4335,18186,7606,-3748,-4538,-5415,-1249,-14683,4596,-2287,2462,19996,-13523,15675,-4084,3340,-8451,-1177,843,7742,1808,4398,16740,1606,3760,20451,-5674,5473,-483,-7170,-7796,-16740,9839,3027,6775,-1787,-7783,3107,11386,-6385,-4929,18993,-8966,-12178,20079,-3261,-12737,6492,6289,18675,-2891,-6436,-11719,8805,11615,13981,7140,-8288,-17855,-7419,-5714,4503,10451,-29220,-2084,15216,786,-20371,-3129,9848,12923,69,1564,6401,-11150,1135,2828,12101,10556,1998,-2915,-7168,-1453,7894,-1982,-13292,-4847,3540,-15800,-13984,-1963,2656,5148,-15304,-1408,-5476,3665,-717,-10138,14892,-7216,7193,-594,3678,-18363,-18803,-5853,-4513,-9946,2259,-11437,-2254,7272,-3361,-6573,-6156,3154,2777,-11573,955,-1813,-5940,4330,398,-1616,-20264,-8307,14223,-1074,-6932,-113,1344,-8307,-5453,18800,-6226,-2277,5666,-11443,5664,-15298,-18631,-4623,-21167,-1762,-5678,7600,15567,-1363,6905,4515,3657,-219,235,-8394,19344,12922,-1732,3578,2116,-325,6911,11773,-1306,-15541,-6194,1654,-7036,-7735,-11066,-414,2966,-6844,-24037,1471,-12680,-6017,-10792,2458,-18517,954,12084,6097,22793,-20555,-5704,7694,9795,3905,-6888,5199,-12432,-6635,-8461,-8941,22928,-7963,11536,-16628,1354,-1795,19058,1240,3592,3930,-8217,-12032,-7125,-17422,7887,-5139,-1830,16848,6836,1832,15753,-5328,16098,-11480,375,-4555,-10168,13418,-4639,-8470,-1834,-9947,913,13174,8910,-18108,8456,-7721,-19177,-9906,-3819,-4620,-18572,16525,578,2401,-12949,-3160,-2589,-6409,275,-12902,11176,-7696,12130,-5789,3283,607,6536,-11055,-6286,-11870,-6546,-6015,-15335,12779,-8025,545,9700,81,-4931,6640,9330,6368,-4350,10579,2102,-15189,18978,3677,692,-26067,1001,3226,-635,18134,9120,-8060,7276,-642,2261,-5355,-7268,8739,13835,-16022,-11362,6033,-728,1158,-7610,-16001,3160,-3699,10647,-7999,-8004,1844,-2609,-3023,857,-2673,-2481,6715,-21075,-1937,-2255,-4177,-5582,3869,-3341,-11594,7208,-12311,3786,12357,-8477,730,-21769,-1277,-4878,-9327,-13378,7187,-5952,-3224,-10495,-7558,-1633,-7102,-16883,-5727,-7165,5985,4896,6329,10087,10643,15248,7898,13385,-7175,-9475,3024,2447,59,10197,7564,14028,-9173,-2064,2240,-6144,11231,-8078,17785,10980,-13085,4588,813,4962,5845,-5735,6470,10330,6800,11784,201,7110,8304,-1491,-12663,-8343,3356,-170,-2369,-18825,19704,2431,-1560,-5828,5471,4814,-3366,-4769,-8335,-9521,-12535,-2222,15295,1592,-9822,-12471,13742,-10666,-24201,5218,307,12554,-1429,-10966,12164,10734,-1842,10853,-7763,-2342,-1116,-13322,-15520,-9145,12852,-3373,-78,-5848,1136,-4257,-23732,-1950,9114];

// This first is a self-signed certificate. Expires September 2025
// Uses RSA 2048 bit SHA256

pub const SS_PRIVATE: &str = 
"MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCghTOzZaVdVS53\
FEMye6QZ1jgQniPuwydFIrVmRRAJf3zuMEXH77go4o59wgAmqzV1WM8VMDBl89ji\
zxFh5L7B11U/2HxnTxgsidkJfZIVcUt8jYDLIMQkaTrVV4c8GjPcxuy2+XMmNvDX\
yPlZtRrMiFeaxmLZdxGxte6Jl6qJwCnfZW7hZ1fiv16e1XSJng+F+Yrabdm83wIo\
mf2+PF9dv1JfTNSu6TI2Na8++fdFx8fsnK4Q03FwqrAd5/ivJZaVrx87GRtd+2VT\
mumbknzWWVAQ74CQbwoyQ9o2UiWNyVHxw/WKTk4CZGvqfs52SX+fx3FzachjzC4b\
XgZ5trNxAgMBAAECggEAFIcURoPgMuBa0dWghkszgC5Z+x4OIFGKqxe2NP7t/xjz\
pA4+TkREu83FRSXTGR7Z9kjGKsJ/3fniKZcrdOZo0qcz+rc3qYp+3+s8+y64yM81\
RRdfehqVmsZuRKwt2izLpxc1XGzoIeHyyNWltagoZjGlamCmcYL9m0lV2PixUW4y\
wkXaeScvLXZmAesLr8jSWusVrt+VZHdXTMRcXI3Id+wAl1ECxecJjhIn77d02Y2p\
IswKK78YFdzO0yEFq+YhzcsovQoApIWEuAS+zpJiJrwiy98hWOwH5RLfwrvX88OB\
WQYpyEfVIOF9lAA+1qOf4HybmkrNvX/MdY/9PEHVpQKBgQDVVhPgBHGJPI/SgX/r\
tkEDHudcc00RP2KZplChdrTxUaTNA187TV2dKmkMduu9vpw66avMw+NkBXlCDOjU\
Trcy1JK1XI4/4hiMzxgoBx1ci34zbp4hl2O4jvBW2Juz2WUGKKPocImdXDKIppLJ\
QhtiUzxZmKzYz3ySxD7pt8/YkwKBgQDAnyuZGHkM2aMOItx3DbB+b6QMEjwNTqM9\
CimPFC2QojBQiVxx+vMOPxf9qFZqnS18E07Oy+/X/xDopYMyCGfcr3T6hpR1UxKc\
etBQ44C95wZwewnzDgRr17frqN28J8707eLYJvHyFgCS2umkiBLp06ktc/imoMHJ\
TMiVby7aawKBgGINoDD0meKD7W7JiqwiJptyltBNRnzI717DrIep8dyAtAhuplSx\
aHeWSJYsCoo5k8EYKZiB6H/ObD9Jg7IhQ96fCZdGJTODjdkaTnYHXx1sF+M30oKJ\
/JGVUS35fQcawm4kO8HYB8hF2gwo04qhUcjNjQ15OOil5RHoFSqDC4r1AoGBAK++\
ylWV2aRa0gWs0wAg0l6Z19BXtsjhbdjcc8yiuWwUPwbMPTeVorvl3yrFs4r0u7JQ\
H4BY3A10IGZT1R8KQlE9GPsXXU6qq/lvqK+U0zrxFZP8/rfvmyMWIC341c69d3tL\
rMRQzEF3x7A14iUHLlJ/lwTsofrOA+F5mC2X0uTfAoGASbWWiWLBy5B1VZ+wV6R+\
jCrscAl1+E3qpL7k7vBTntrUGEL2SFrBJdHAiq0nfSAxAZdemA1/rBFLnkSU5wt0\
OPqbNHLhyl66leqZnkoP/EfZLtSSjMBBLNna/xDNyzalRy0BUyBN6yrz3yF+Om+s\
khdgfM1AyAMEGynDE2zRXlU=";

pub const SS_CERTCHAIN: [&str;2] = [
"MIIECzCCAvOgAwIBAgIUP6cEg1C+VgCtMqQ547y7GpKFrpswDQYJKoZIhvcNAQEL\
BQAwgZQxCzAJBgNVBAYTAkFFMRQwEgYDVQQIDAtNYXNkYXIgQ2l0eTESMBAGA1UE\
BwwJQWJ1IERoYWJpMQwwCgYDVQQKDANUSUkxDDAKBgNVBAsMA0NSQzEaMBgGA1UE\
AwwRVGlpZ2VyIFRMUyBzZXJ2ZXIxIzAhBgkqhkiG9w0BCQEWFG1pY2hhZWwuc2Nv\
dHRAdGlpLmFlMB4XDTIzMDExMjA2NDc0OFoXDTI1MTAwODA2NDc0OFowgZQxCzAJ\
BgNVBAYTAkFFMRQwEgYDVQQIDAtNYXNkYXIgQ2l0eTESMBAGA1UEBwwJQWJ1IERo\
YWJpMQwwCgYDVQQKDANUSUkxDDAKBgNVBAsMA0NSQzEaMBgGA1UEAwwRVGlpZ2Vy\
IFRMUyBzZXJ2ZXIxIzAhBgkqhkiG9w0BCQEWFG1pY2hhZWwuc2NvdHRAdGlpLmFl\
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoIUzs2WlXVUudxRDMnuk\
GdY4EJ4j7sMnRSK1ZkUQCX987jBFx++4KOKOfcIAJqs1dVjPFTAwZfPY4s8RYeS+\
wddVP9h8Z08YLInZCX2SFXFLfI2AyyDEJGk61VeHPBoz3MbstvlzJjbw18j5WbUa\
zIhXmsZi2XcRsbXuiZeqicAp32Vu4WdX4r9entV0iZ4PhfmK2m3ZvN8CKJn9vjxf\
Xb9SX0zUrukyNjWvPvn3RcfH7JyuENNxcKqwHef4ryWWla8fOxkbXftlU5rpm5J8\
1llQEO+AkG8KMkPaNlIljclR8cP1ik5OAmRr6n7Odkl/n8dxc2nIY8wuG14Gebaz\
cQIDAQABo1MwUTAdBgNVHQ4EFgQUnjQ+MoNeySl9R/t0OnLU9DCAVwswHwYDVR0j\
BBgwFoAUnjQ+MoNeySl9R/t0OnLU9DCAVwswDwYDVR0TAQH/BAUwAwEB/zANBgkq\
hkiG9w0BAQsFAAOCAQEALS4hxQht4PRCuk0ToJCbrUhKzjS3tpAFM9pnllhEOhV1\
owFbbb2JHRWsxEp+Ein/Xs+sfad7dDYh/IvjC1JaNMwV1MSnZXsXvQHTAR8ZbFmZ\
oSRvJ+oPHi98MDgcg/aObzjGIAe/B5mjNyp7Ab9vYY502ggoUwr3sd6Q9hh6wJrK\
z7CB0xzRaG8Sh0nr+4LJJWG4PLPQxKwAhqLnqcr2sU/fD8ftwFzBsMh4rDOrRYAl\
+bsdQBgZpSUdXEJBl7tvuEAhVxML45Y/bevBoer5uSsAzKagmHNTughJRtVRZIOA\
/utRvajbcCqkgdOtAY7CyKwwntrnHSs0+CGsDbOl4Q==",""];


// This is a Server + Intermediate CA chain based on the secp256r1 elliptic curve. Expires June 2027.
pub const TE_PRIVATE: &str = 
"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg8wgn2w0HuYNLT48t\
GhfRPV2t4VmQbAGZMOS8sqjG8nahRANCAAS3WlgbSm8yxJ0Ek7f9EQlGUC8AEErI\
qzPhnEkNgyORHyp7vQmIQB4fqj4U/Mrq62JjQUsApBT4ynf43mWqthBb";

pub const TE_CERTCHAIN: [&str;2] = [
"MIIBcDCCARagAwIBAgIBATAKBggqhkjOPQQDAjAkMSIwIAYDVQQDDBlUaWlnZXJU\
TFMgaW50ZXJtZWRpYXRlIENBMB4XDTI0MTAwMzA1NDAyNVoXDTI3MDYzMDA1NDAy\
NVowGzEZMBcGA1UEAwwQVGlpZ2VyVExTIHNlcnZlcjBZMBMGByqGSM49AgEGCCqG\
SM49AwEHA0IABLdaWBtKbzLEnQSTt/0RCUZQLwAQSsirM+GcSQ2DI5EfKnu9CYhA\
Hh+qPhT8yurrYmNBSwCkFPjKd/jeZaq2EFujQjBAMB0GA1UdDgQWBBSGjz1vNAFB\
YuJOEcNmHKZ9ChEpiTAfBgNVHSMEGDAWgBTXTDB/2QLR5BJ0d/M6d4eoPaKDhzAK\
BggqhkjOPQQDAgNIADBFAiAZaoMULbEB55hcjloQHJI9tJDZatFj+R7bUKQt0AJ2\
GQIhANWAiuu/9Q8bZbBLGbjx0CSd9UjfVOPYchY1au5CuXV3",
"MIIBkjCCATigAwIBAgIUNpgOkjC76f6nam2N0sACUZikRAgwCgYIKoZIzj0EAwIw\
HDEaMBgGA1UEAwwRVGlpZ2VyVExTIHJvb3QgQ0EwHhcNMjQxMDAzMDU0MDAzWhcN\
MjcwNjMwMDU0MDAzWjAkMSIwIAYDVQQDDBlUaWlnZXJUTFMgaW50ZXJtZWRpYXRl\
IENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEhK+HXAMXEdXe73oHglb1yfnk\
LjB7RolB1xO3ukvk07P3oC9HrvVMYrKVgetiad/k9AX2e5t38LHD3iYoPzW7vqNQ\
ME4wDAYDVR0TBAUwAwEB/zAdBgNVHQ4EFgQU10wwf9kC0eQSdHfzOneHqD2ig4cw\
HwYDVR0jBBgwFoAU959bDiiE6hyqkc4xr6lZq6rS2qQwCgYIKoZIzj0EAwIDSAAw\
RQIgPg7Tf97Y2UN5yPVlczv1sF9Q0Tx3PJtdLkCFCavHacoCIQD/jO9xwVatBOMT\
xwTxTdWrEEquNL5FcxTvzgavU8uxug=="];


// This Server + Intermediate CA chain is based on the ed448+ed25519 elliptic curves. Expires Jan 2026.

pub const ED_PRIVATE: &str = 
"MC4CAQAwBQYDK2VwBCIEIBDarp6gZMMNAW97V5vZWyPcg38GEyrRUl/mKId4ZfJ1";

pub const ED_CERTCHAIN: [&str;2] = [

"MIIBGDCBmQIBATAFBgMrZXEwJDEiMCAGA1UEAwwZVGlpZ2VyVExTIGludGVybWVk\
aWF0ZSBDQTAeFw0yMzA1MDExMTI3MThaFw0yNjAxMjUxMTI3MThaMBsxGTAXBgNV\
BAMMEFRpaWdlclRMUyBzZXJ2ZXIwKjAFBgMrZXADIQCgtt41J0anRPIIOo5v5nf9\
xho3AAMXjVP1+SxPZ63PZjAFBgMrZXEDcwATk5A+BpmO3ooatxbW0u9X9l9+WWEH\
YfgJgjHhqUhH1qjSsGSrr2OO/6gKX8saxPz0J3soAHfGKoA6p+2KzEh7LUhXUsDA\
5j/j+SavVmP/Z2a61ANOfDY8em3uPg9lYrPdQ123z6b5FgBOyFQ2nw16MwA=",

"MIIBXDCB3aADAgECAhQMsUGg7j25uStmRDTDKOGt04D9yzAFBgMrZXEwHDEaMBgG\
A1UEAwwRVGlpZ2VyVExTIHJvb3QgQ0EwHhcNMjMwNTAxMTEyNDUzWhcNMjYwMTI1\
MTEyNDUzWjAkMSIwIAYDVQQDDBlUaWlnZXJUTFMgaW50ZXJtZWRpYXRlIENBMEMw\
BQYDK2VxAzoAUsiJQRuUoUPw5BCvMuFCKVLTl+ONH8rVJP2ZzRX4+XSOsQddHjGu\
OxCJDUq6RdkIX9rKHbukqcGAoxAwDjAMBgNVHRMEBTADAQH/MAUGAytlcQNzAPXR\
C8VEsvyWIJHiOD03nFW23xBwBwsQANYxBwBnTTHq88wKvXn5yMxTEii1YR/bYnxU\
IZX7SwrWAMnauGBzoetBx0+iyLUztOeTj6zZzLgn1BOKtF+RIXghz2ex/nYmq8AB\
GpRBvWpLhJSiiYy/vXYCAA=="];

// Experimental hybrid p256_MLDSA44 Server key + Intermediate CA chain. Expires December 2025
pub const HY_PRIVATE: &str =
"MIIPsQIBADAHBgUrzg8HBQSCD6EEgg+dAAAAeTB3AgEBBCCmcLSxjHQeIoGFZR14\
36KFOBUPFonfAGWH7T3/yJmjBqAKBggqhkjOPQMBB6FEA0IABGxbAQ3Zg+Ir3i7x\
pFNQrvu++QbEOpj5IoE9eQqUl3/BXHKJT9R2YUSSBjYsMEdn7+V+aqmSpWUUFWbv\
4yBYxhWV6vWXXc83G+LWHTwT1YHD1XLuIMr/tBxus50ltTbZp948kuLJkIaAF2G8\
AFInrxXuHc5LFGfhYgTz66QqukDGW6GR8JSzS2GbK6r4F8fOkdL5hNHC7KrmbuGt\
SKi6rvzhvw8ez3AY9BuWxx6NHa4tzVJe3kieBAU2iniPMRxigQMhclhGQJkkEtwU\
CkpCaBFAAKBELmOAYeEiRFkwkExGZBASLYSSJBi2cCMSMqKwTOCyhGLETeFCMByn\
RNNCKQNHZQopDtukZYLIaQEEJFm4kBKHMASEiWMCgNEEIMu0cFIkTVAiTMlCiGO4\
QATDJcIAIhkUjWKIDBNDahETLhKGUUuQLBkFKZNIcsIAcgm1DRyHMAtFMsNARAtF\
DoCSDMkgYNAwKuS0KBiCZZFGASGBJCEkbpsCYMmiDAM5SZkoYqOYceIkEBgCMUCG\
gdAyDqM4CkhGcaRETUQGgNOQTZwSZuEGAqJGDOEwUmAUBAKzgMOwgJJEIiAmaJsA\
YNKUCQmmZCE3gFq4EVMYUMRITUoWSaMkjRJEKgwFbhIHasrGMKDGQRQSkEPIMSQi\
YlqQUWPCkZywQSEiipqCaaMWihwyEiOZIRjAgQSFBaJABuO4cAuRicOihUAiaVMi\
TRO4ZRgTiZC4kAAYDAmDKSK0KVjEbeQASlISjBsWkAGJZMAmBoooYUIgYBwwAogI\
DJAwToxIAYvAJRyXENMoiIrIQdE2cEkYBVoYJaMAkMA2BNukDJEQRhE4UQpIiFIG\
AtuCSQRJKYEQbZkWAKBEMhNGaNjGbZSigMGIEQORIEQUQMOgjEO0RBMjbhu3iNiC\
MaSmBENCRBDGjWLESYwILSOjCBCDiCMnTtMmgsrCYQyGRRoiRAgScRHDCBrGCEAi\
LcJIIIIkYIsAaoJGcsCSDBklKNw0hsi4BNjIgAMUcCSokBEwKCCRiBtGbSGDBSHH\
jVigZRjGRcMyBCAIJMGoKMw4Qgq2cZlGhcBEgFOSTMBGcBmhiRoDSOIChUs4bgMo\
ENIIiIIWboomJiNDBgsYUCIUKEiEZFNGRgm1LQpEgNsEagKgaVQoZcwwDAqJDAgj\
chQyQVE4TBImDhkVRIo2hVmIjArGUOMSEgiVjNk2bFSwRApBcWS2BAQnJgw3ZMgQ\
SNEGUSPFTAGlYSIiZsuYjBlHjCQSBSGHKRgyScIIIRihRdSCCFWCIXKTNscdbOJC\
Xrh/Ut5VawYCoItpVW+MjiFKo53VDbHAydGOSW9PwW52hnnwcYiMMsOK0q16dU4K\
+RqPatIi8gMqs0qkKl+59OI+qxHyPfsZUSN4YCoB+tkYark72T392cJkWfBM0+r8\
7A4FzW0d+OIei/kYTPQq8SswpPgBiPaCmrX8kPPqEFfsdCR4pQY6wLXkBpuih7dZ\
5Vm1lk6i+iRzD/ovg6uJcc30xtKr1ID+vmDi+IO4D98EcVR6WL/eMSlgFb6UG5Ey\
cKdvGkLzTQjsjLGjZg6ExSPTsvSBFqikb2xceMgpA3dY2dnN3i6i7z5g0tZ45LRm\
TSDSkPk2Fa5CAx/yPbdi+JrHhdozaLvc4kSoQG0vzE6pdLZWUWo+Oc+Bzg+O+U0q\
W605mAF8bPMqpI+oODpqsW1WCHbYINU/pUKe1Jrz0wH9Fbv2+oelcifEZgU3JcO1\
/g4T8/XHAXReLfLrqW2zYnjtMBNPHSfcJWsaR0ifu0oBCex+de4yKrkfS2VD9ahJ\
r1jO+PbLnu0Hkc11ReFyoEofQIR+Vije4D6h6GH5wdKOcps8sS6w7KV2RSy6WWV2\
v/bB1mN1XUsHiREZKcNrfQld85rEZb5R+kpaJ1Laj3Z3yiucQkr/fJGE4nMKK1pQ\
3NFO76YARgGU/tvLmWK6UZkliVeu3cnxOktb/k9SMGgnTXFhPVUG3xfJ+FYSc1On\
oR/xzMUaCGBIJbkU4Mto9U3Gg3/yg6wVdihWFChGXHAeDtOO4bPQDvz7XRUyOGLe\
oAVNbGAzhtcaMikmaLZv8AatwMwA7MqeE7L15M5b1E35O2LZHXqYrT1amtwnWh5H\
FT9nYeK/Q/3JlIxAGEd1TDTehuRYEo5MAFWvh4alo5A6scJw9JI2lBIjLUrVKQu/\
HUJMQq0u6Il4c1TiHbUa6hBvbmlABC3phBNdWaV4IX7SBQsQhAb3Y4l/zf/xhDa6\
xaCj200sf0NnDOCoRazgikBed7N6W3sv4mFqPrCAxRNPSZLoLJskGy0vFC3VCIua\
sOfB93oHApVriBvdKE+AhVfWrtAqI6sKjMKArxx3+2ia5QdRFtLNN6R33/ZdmgnW\
uAiwq6XZkQ6TKefJfg0q4Z2qVaaNdEaXe2vo2QxAgHvPAX45IjmUvPDJWhD4PrmY\
Yxb+GXO0lfhdmmK1iVtCSrAI8h3PE97A0BEDrlV+Oxe0vsYA3Pl6axXACed7q7V5\
iLz1dvAhgau+3n0yCzFfdNw5C77w+zUHHy2h0PS8iLdadGCUTVlkS2xykz26pzPs\
HBbf+5vBv1cMvgBgrrdHJxVY6ltt8RYf7SFMTLj9080NC/nL6g3ZLHuMDBl6BbxA\
+AZfAO7SfnmkbokE0dwjjEQFIrOC6n8zJvcVf46qnp7Hx3hpwWGQftpuxYUJCzI8\
JSLrH8+XMvrB+m+RFhQhUpAlAQVnRabc6pRXPuVt449y2ts+qG4BRaDlq/Tis+bV\
8KnXOyww5BEPqKoiLtQlBclNOsHVf/AwRPhRUk+GttQEp29tXpiMjh/00rBkd60S\
srSwYe38tz1lm6N/OKd95L7dGnOvLvoNa8r6PzcXcgFeelSIPUtX4St3svpeinnv\
coMHdtfwnHCEf6iRoAOmaY9tSXWpLmtgwIYm0Ldh2W8FePIqS9JDYnsL3B9pUsdr\
xC3g1DMTXc81QRRwJEaW1KmgAOYMdhYhUeulNZSVrTmH6Y7fLxDuAwllzxfU4tW/\
Lf3m6PT58G/fHpz2VU1T9eb5KDPF72J0QJ+Fp29FqYJCWPNBq0650hmiaSFc0j40\
jEPYlFqNzfIL0tWohtUFYaVsM6RHpbNoptmQkGVPodOtD1yrCfIMbCrKtxmNdOa8\
y4gQG5CBfCymyqNp68iEvFMcc+FlKRqyG+/9ifAm15ngeXhT2H/muCyI4TPKTp1r\
zFVOQ4COVZZx7l2nenvjTQr/Y1Ls+uhYOQ3I8P5AV3VtDzSGBNcLjqzAiVrdmZAn\
xxuJvq8ZGsNJCxR+L+VtHQjEKh/sJEft9TmMhSIF3Uz5VU8Q/lD5R64jCKRLeHjA\
jpKeI91OZPr1eR48t9VB7U87qRBav7mSGJilOAW0WEDgMCrpQ5xC79YK1kn+h3Pq\
14iuBM5dVgAcsPLCqret8jQiQ9VmSZ77q2IKIOKugsab5BbeQ+RQwCaw1RbWO1sv\
i6a/VjZtDVRyYJZXiU598TqAQa9Jler1l13PNxvi1h08E9WBw9Vy7iDK/7QcbrOd\
JbU22afqfgTjo1hlJfZkIy8OtiDU8W19KBBdm/HoGDDhLsl2qbf9l9CEee6cqzn8\
Ukco7J8hHqtWzIYOkQbUJveSy4UCEhlMHEp134gvu2y0RqqqNCXjqEE16m/gxe/U\
jdW9p8a+NBOkR6xG3zP1V6S9denvhauezkqb415YpU3ZoV4O3dr4CnJztCe2zuEM\
R0LxgzoP27VEJub5079mg4aPyAxwNJ4Foivxi29GJdSZ4e6R5lEziGmx/TbyKSNm\
Bpqip1ykcFugDo4sO7T7KonmHv0IIqul5HLOdMAohGTCCJLM4Ok41eYc2I0d1+Ul\
0bKpHBEFhHH3G7RS4aVx/3JQ4g2g7ESMynOgbXGhmrf2uTVKjHH1CT9Em92sO9e4\
B9svNwB4uvF7gACvbjSWSN6Bbjs2/HXR1HMcLMKEa4n8o7IAk7IBnspzVrlRnP/A\
W+SjTmMFYI6Up7Qpg/ZZS45Q5muLXTPehptIjl5kcKN7UlIJ6RXmW4sJpHJiMVVq\
/OKu/ZusySm1IsGJdtvS5LQNWp3PsVYEt+UIyCujBvSPbDP241XQKHibyfCqE+v7\
xY8282b/j2J9evUf2lG187fl+JnSngGf3e538MtXCN6omZ1BSywOjDyR5y5mfn5e\
b7O6NjrL+l9YxAZZAxhBUuMvJk/Yo91zu9FbdFEm5qOesB9L5H4gPTiSlbNWd4p2\
rZT2NDLL72qFKLiG1E0AS1pQATUeNthAjwK4kLd7y8EYQqsMKUdOy+6VKiQrdYEG\
U8/ne1b0okK++Q7fozc7ffhWVMb0N1rwQa1Owy3+VdTJFdbEhTDRzOIN5Dv9X5W7\
aEwlgFc3Shhst++H+xnVWNr1f2BIZ2rxbQ6JVnqPLm9ol+FiidqO4BaR4yObHHtr\
QLyQrFn+9hvOdwi9Ubwsy9VZNEhbDPCmEEIa/P+r3BoVkxtOQ8ICSfHEzQhlvVDo\
awgrzwiNMfNqS/zx9YW4S+IEXHPjZ3WNcEOOhaZBmhB6OtvnbSoSQdpl/AS79yVo\
H3JwbknyBERSwrr3vAkAhEQpXJEF3NZFUvwj9edT+LjNPCjuwbakJlrGsyB9FDCw\
ZtGZxCi41ZoIOQe15qVGPIGNLwbOZ2UQ+rMU10+snmcmhft+WKUF0EUFyxm251+f\
GlbVWnOTa/dsMr/WpiRdYbPJBvXFpcDuFTFhMggrDqVIEKFXkBMHkpCExLTDxx2N\
0EHP8KkWBYrWVDFYj6ZSjymXtVMP3KKQ0oHQbvkPAFhqP+iAOvE59oqjCHeXhQZA\
aYUcp8qlBC66OeMgk/70m4cL0e61U9qqXLE80kqj+k1ye4ErbafSNi+kAl1b1Lrf\
a04rmDdAK/xmf69n78kD/XPAanQhD4FNlvaLVqHehaoG1oj9gXzudTAQTDgY54kp\
rnkdbEo4Crj2RXpwB1xMmTUK7vVI98BEXWq1Gs9lfloGpogeYPcuVgDWlPlcIFuc\
KWXGglOlJw0pajzZSz6YucwxbmyOm3f9eZe1SFS0xikaPwBssWHYXQtUutWKI4VU\
6qABqGqcmOES1RawK5Blmi+6AiDRCqBe6GTgI64ssoj9giG6YmppIEt9Gdmmm/Ev\
ISAoqKYRRUxgq65SEK3+YQfzBKtS76WFMP82FE0ixUHn5lpRxWrwKb4nqMUHRU4M\
lWsjzIkGuIhEtcrk9nBxfxEQVNveNqjQ6vKxadpW79/tFzJxpA==";
pub const HY_CERTCHAIN: [&str;2] = [
"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\
AAAGEB0s"];


// Experimental MLDSA65 Server key + Intermediate CA chain. Expires June 2027
pub const PQ_PRIVATE: &str = 
"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\
PwRn3EA1ETdpdd6l";

pub const PQ_CERTCHAIN: [&str;2] = [
"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\
AAAAAAAAAAAAAAAAAAAAAAAAAAcMERUcIw==",
"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\
AAAAAAAFDRATGyQ="];

// extract type of signature algorithm from x509 return type
fn get_sigalg(pk: &x509::PKTYPE) -> u16 {
    if pk.kind==x509::ECC {
        if pk.curve==x509::USE_NIST256 {
            return ECDSA_SECP256R1_SHA256; // as long as this is a client capability
        }
        if pk.curve==x509::USE_NIST384 {
            return ECDSA_SECP384R1_SHA384;  // as long as this is a client capability
        }
    }
    if pk.kind==x509::RSA {
       return RSA_PSS_RSAE_SHA256;
    }
    if pk.kind==x509::PQ {
        return MLDSA65;
    }
    if pk.kind==x509::HY {
        return MLDSA44_P256;
    }
    if pk.kind==x509::ECD {
        if pk.curve==x509::USE_ED25519 {
            return ED25519;
        }
        if pk.curve==x509::USE_ED448 {
            return ED448;
        }
    }            
    return 0;    
}

// add X509 signature type to TLS signature capability requirements list
fn add_cert_sig_type(pk: &x509::PKTYPE,reqlen: usize,requirements: &mut [u16]) -> usize {
    let mut len=reqlen;
    if pk.kind==x509::ECC {
        if pk.curve==x509::USE_NIST256 {
            requirements[len]=ECDSA_SECP256R1_SHA256; // as long as this is a client capability
            len+=1;
        }
        if pk.curve==x509::USE_NIST384 {
            requirements[len]=ECDSA_SECP384R1_SHA384;  // as long as this is a client capability
            len+=1;
        }
        return len;
    }
    if pk.kind==x509::RSA {
        if pk.hash==x509::H256 {
            requirements[len]=RSA_PKCS1_SHA256;
            len+=1;
        }
        if pk.hash==x509::H384 {
            requirements[len]=RSA_PKCS1_SHA384;
            len+=1;
        }
        if pk.hash==x509::H512 {
            requirements[len]=RSA_PKCS1_SHA512;
            len+=1;
        }
        return len;
    }

    if pk.kind==x509::PQ {
        requirements[len]=MLDSA65;
        len+=1;
        return len;
    }
    if pk.kind==x509::HY {
        requirements[len]=MLDSA44_P256;
        len+=1;
        requirements[len]=MLDSA44;
        len+=1;
        requirements[len]=ECDSA_SECP256R1_SHA384;
        len+=1;
        return len;  // *** also need to check that secp256r1 is supported - kind indicates that both signature keys are in privkey
    }
    if pk.kind==x509::ECD {
        if pk.curve==x509::USE_ED25519 {
            requirements[len]=ED25519;
            len+=1;
            return len;
        }
        if pk.curve==x509::USE_ED448 {
            requirements[len]=ED448;
            len+=1;
            return len;
        }
    }
    return len;
}

// server credential, its certificate chain, its secret key
#[derive(Copy,Clone)]
pub struct CREDENTIAL {
    pub certchain: [u8;MAX_SERVER_CHAIN_SIZE],
    pub certchain_len: usize,
    pub publickey: [u8;MAX_SIG_PUBLIC_KEY],
    pub publickey_len: usize,
    pub secretkey: [u8;MAX_SIG_SECRET_KEY],
    pub secretkey_len: usize,
    pub requirements: [u16;16],    // signature algorithms that will be needed by the client
    pub nreqs: usize,
    pub nreqsraw: usize,
    pub sigalg: u16,              // my signing algorithm
}

impl CREDENTIAL {
    pub fn new() -> CREDENTIAL  { 
        let this=CREDENTIAL {
            certchain:[0;MAX_SERVER_CHAIN_SIZE], // certificate chain to be sent to client
            certchain_len: 0,
            publickey: [0;MAX_SIG_PUBLIC_KEY],  // server public key
            publickey_len: 0,
            secretkey: [0;MAX_SIG_SECRET_KEY],  // server secret key
            secretkey_len: 0,
            requirements: [0;16],  // types of signatures on certificates
            nreqs: 0,
            nreqsraw: 0, // only one signature requirement for raw public key
            sigalg: 0,   // my signature algorithm
        };
        return this;
    }

// create credential structure from base64 inputs of the private key and the certificate chain
    pub fn set(&mut self) -> bool  {
        let mut sc:[u8;MAX_CERT_SIZE]=[0;MAX_CERT_SIZE]; // workspace
        let mut sig:[u8;MAX_SIGNATURE_SIZE]=[0;MAX_SIGNATURE_SIZE];
       
       	let privkey:&str; let stored_chain:[&str;2];
        let mut secret=String::from("");  
        let mut certchain:[String;2]=[String::from(""),String::from("")];     	
       	if SERVER_CERT==FROM_ROM {
            match CRYPTO_SETTING {
                TYPICAL => {privkey=SS_PRIVATE; stored_chain=SS_CERTCHAIN;},
                TINY_ECC => {privkey=TE_PRIVATE; stored_chain=TE_CERTCHAIN;},
                EDDSA => {privkey=ED_PRIVATE; stored_chain=ED_CERTCHAIN;},
                POST_QUANTUM => {privkey=PQ_PRIVATE; stored_chain=PQ_CERTCHAIN;},
                HYBRID => {privkey=HY_PRIVATE; stored_chain=HY_CERTCHAIN;},
            _ => return false,
            }
        } else {
            let mut path = Path::new("../../../servercert/server.key");
            let mut display = path.display();

            let mut file = match File::open(path) {
                Err(why) => panic!("Must run from project src directory, couldn't find {}: {}", display, why),
                Ok(file) => file,
            };
            let mut reader = BufReader::new(file);
            for line in reader.lines() {
                let next=line.unwrap();
                let nextstr=next.as_str();
                if nextstr.chars().nth(0).unwrap()=='-' {
                    continue;
                }
                secret+=nextstr;
            }   
            privkey=secret.as_str();
            path=Path::new("../../../servercert/certchain.pem" );
            display=path.display();
            file = match File::open(path) {
                Err(why) => panic!("Must run from project src directory, couldn't find {}: {}", display, why),
                Ok(file) => file,
            };
            reader = BufReader::new(file);
            let mut i=0;
            for line in reader.lines().skip(1) {
                let next=line.unwrap();
                let nextstr=next.as_str();
                if nextstr.chars().nth(0).unwrap()=='-' {
                    i=1;
                    continue;
                }
                certchain[i]+=nextstr;
            }            
            stored_chain=[certchain[0].as_str(),certchain[1].as_str()];
        }         

        let mut sclen=utils::decode_b64(&privkey.as_bytes(),&mut sc);  // get secret key structure
        let mut pk=x509::extract_private_key(&sc[0..sclen],&mut self.secretkey);    // extract secret key
        self.secretkey_len=pk.len;
	let kind=get_sigalg(&pk); // Client must implement algorithm to do signature - make sure its in the SAL!
	self.sigalg=kind;

        let mut sig_algs:[u16;MAX_SUPPORTED_SIGS]=[0;MAX_SUPPORTED_SIGS];
        let nsa=sal::sigs(&mut sig_algs);
        let mut offered=false;
        for i in 0..nsa {
//println!("sigalgs= {:x}",sig_algs[i]);
            if kind==sig_algs[i] {
               offered=true;
            }
        } 
        if !offered { return false; } 

 // chain length is 1 (self-signed) or 2 (server+intermediate - root is not transmitted)
 //       let chlen=stored_chain.len();
       
        let mut b=stored_chain[0].as_bytes();
        sclen=utils::decode_b64(&b,&mut sc);

// start building certificate chain
        self.certchain_len=utils::append_int(&mut self.certchain,self.certchain_len,sclen,3);
        self.certchain_len=utils::append_bytes(&mut self.certchain,self.certchain_len,&sc[0..sclen]);
        self.certchain_len=utils::append_int(&mut self.certchain,self.certchain_len,0,2);
        pk=extract_cert_sig(&sc[0..sclen],&mut sig);  // not interested in signature, only its type
        self.nreqs=add_cert_sig_type(&pk,self.nreqs,&mut self.requirements);
        self.nreqsraw=self.nreqs;

        let mut start=0;
        let mut len=x509::find_cert(&sc,&mut start); // find start and length of first signed certificate
        let cert=&sc[start..start+len]; // extract certificate
        len=x509::find_public_key(cert,&mut start);
        let pubk=&cert[start..start+len]; // extract public key
        self.publickey_len=utils::append_int(&mut self.publickey,self.publickey_len,len,3);
        self.publickey_len=utils::append_bytes(&mut self.publickey,self.publickey_len,&pubk[0..len]);
   
   //     for i in 1..chlen {
   	if stored_chain[1].len()>0 {
            b=stored_chain[1].as_bytes();
            sclen=utils::decode_b64(&b,&mut sc);
            self.certchain_len=utils::append_int(&mut self.certchain,self.certchain_len,sclen,3);
            self.certchain_len=utils::append_bytes(&mut self.certchain,self.certchain_len,&sc[0..sclen]);
            self.certchain_len=utils::append_int(&mut self.certchain,self.certchain_len,0,2);
            pk=extract_cert_sig(&sc[0..sclen],&mut sig); // not interested in signature, only its type
            self.nreqs=add_cert_sig_type(&pk,self.nreqs,&mut self.requirements);
        }
        return true;
    }
}



.TH "C:/Users/mscot/TLS1.3/cpp/include/tls1_3.h" 3 "Mon Oct 3 2022" "Version 1.2" "TiigerTLS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/mscot/TLS1.3/cpp/include/tls1_3.h \- Main TLS 1\&.3 Header File for constants and structures\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include 'tls_octads\&.h'\fP
.br
\fC#include 'tls_sockets\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBret\fP"
.br
.RI "function return structure "
.ti -1c
.RI "struct \fBee_status\fP"
.br
.RI "server encrypted extensions expectations/responses "
.ti -1c
.RI "struct \fBcrypto\fP"
.br
.RI "crypto context structure "
.ti -1c
.RI "struct \fBticket\fP"
.br
.RI "ticket context structure "
.ti -1c
.RI "struct \fBunihash\fP"
.br
.RI "Universal Hash Function\&. "
.ti -1c
.RI "struct \fBTLS_session\fP"
.br
.RI "TLS1\&.3 session state\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBIO_NONE\fP   0"
.br
.ti -1c
.RI "#define \fBIO_APPLICATION\fP   1"
.br
.ti -1c
.RI "#define \fBIO_PROTOCOL\fP   2"
.br
.ti -1c
.RI "#define \fBIO_DEBUG\fP   3"
.br
.ti -1c
.RI "#define \fBIO_WIRE\fP   4"
.br
.ti -1c
.RI "#define \fBTINY_ECC\fP   0"
.br
.ti -1c
.RI "#define \fBTYPICAL\fP   1"
.br
.ti -1c
.RI "#define \fBPOST_QUANTUM\fP   2"
.br
.ti -1c
.RI "#define \fBHYBRID\fP   3"
.br
.ti -1c
.RI "#define \fBNOCERT\fP   0"
.br
.ti -1c
.RI "#define \fBRSA_SS\fP   1"
.br
.ti -1c
.RI "#define \fBECC_SS\fP   2"
.br
.ti -1c
.RI "#define \fBDLT_SS\fP   3"
.br
.ti -1c
.RI "#define \fBHYB_SS\fP   6"
.br
.ti -1c
.RI "#define \fBHW_1\fP   4"
.br
.ti -1c
.RI "#define \fBHW_2\fP   5"
.br
.ti -1c
.RI "#define \fBVERBOSITY\fP   \fBIO_PROTOCOL\fP"
.br
.ti -1c
.RI "#define \fBTHIS_YEAR\fP   2022"
.br
.ti -1c
.RI "#define \fBCLIENT_CERT\fP   \fBECC_SS\fP"
.br
.ti -1c
.RI "#define \fBCRYPTO_SETTING\fP   \fBTYPICAL\fP"
.br
.ti -1c
.RI "#define \fBTLS_APPLICATION_PROTOCOL\fP   (char *)('http/1\&.1')"
.br
.ti -1c
.RI "#define \fBALLOW_SELF_SIGNED\fP"
.br
.ti -1c
.RI "#define \fBTRY_EARLY_DATA\fP"
.br
.ti -1c
.RI "#define \fBTLS_SHA256_T\fP   1"
.br
.ti -1c
.RI "#define \fBTLS_SHA384_T\fP   2"
.br
.ti -1c
.RI "#define \fBTLS_SHA512_T\fP   3"
.br
.ti -1c
.RI "#define \fBTLS_MAX_HASH_STATE\fP   768"
.br
.ti -1c
.RI "#define \fBTLS_MAX_HASH\fP   64"
.br
.ti -1c
.RI "#define \fBTLS_MAX_KEY\fP   32"
.br
.ti -1c
.RI "#define \fBTLS_X509_MAX_FIELD\fP   256"
.br
.ti -1c
.RI "#define \fBTLS_MAX_EXT_LABEL\fP   256"
.br
.ti -1c
.RI "#define \fBTLS_MAX_FRAG\fP   4"
.br
.ti -1c
.RI "#define \fBTLS_MAX_IO_SIZE\fP   (16384+256)"
.br
.ti -1c
.RI "#define \fBTLS_MAX_PLAIN_FRAG\fP   16384"
.br
.ti -1c
.RI "#define \fBTLS_MAX_CIPHER_FRAG\fP   (16384+256)"
.br
.ti -1c
.RI "#define \fBTLS_MAX_CERT_SIZE\fP   2048"
.br
.ti -1c
.RI "#define \fBTLS_MAX_CERT_B64\fP   2800"
.br
.ti -1c
.RI "#define \fBTLS_MAX_HELLO\fP   1024"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SIG_PUB_KEY_SIZE\fP   512"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SIG_SECRET_KEY_SIZE\fP   512"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SIGNATURE_SIZE\fP   512"
.br
.ti -1c
.RI "#define \fBTLS_MAX_KEX_PUB_KEY_SIZE\fP   97"
.br
.ti -1c
.RI "#define \fBTLS_MAX_KEX_CIPHERTEXT_SIZE\fP   97"
.br
.ti -1c
.RI "#define \fBTLS_MAX_KEX_SECRET_KEY_SIZE\fP   48"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SERVER_CHAIN_LEN\fP   2"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SERVER_CHAIN_SIZE\fP   (\fBTLS_MAX_SERVER_CHAIN_LEN\fP*\fBTLS_MAX_CERT_SIZE\fP)"
.br
.ti -1c
.RI "#define \fBTLS_MAX_CLIENT_CHAIN_LEN\fP   1"
.br
.ti -1c
.RI "#define \fBTLS_MAX_CLIENT_CHAIN_SIZE\fP   (\fBTLS_MAX_CLIENT_CHAIN_LEN\fP*\fBTLS_MAX_CERT_SIZE\fP)"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SHARED_SECRET_SIZE\fP   256"
.br
.ti -1c
.RI "#define \fBTLS_MAX_TICKET_SIZE\fP   1024"
.br
.ti -1c
.RI "#define \fBTLS_MAX_EXTENSIONS\fP   2048"
.br
.ti -1c
.RI "#define \fBTLS_MAX_ECC_FIELD\fP   66"
.br
.ti -1c
.RI "#define \fBTLS_MAX_IV_SIZE\fP   12"
.br
.ti -1c
.RI "#define \fBTLS_MAX_TAG_SIZE\fP   16"
.br
.ti -1c
.RI "#define \fBTLS_MAX_COOKIE\fP   128"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SERVER_NAME\fP   128"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SUPPORTED_GROUPS\fP   10"
.br
.ti -1c
.RI "#define \fBTLS_MAX_SUPPORTED_SIGS\fP   16"
.br
.ti -1c
.RI "#define \fBTLS_MAX_PSK_MODES\fP   2"
.br
.ti -1c
.RI "#define \fBTLS_MAX_CIPHER_SUITES\fP   5"
.br
.ti -1c
.RI "#define \fBTLS_AES_128_GCM_SHA256\fP   0x1301"
.br
.ti -1c
.RI "#define \fBTLS_AES_256_GCM_SHA384\fP   0x1302"
.br
.ti -1c
.RI "#define \fBTLS_CHACHA20_POLY1305_SHA256\fP   0x1303"
.br
.ti -1c
.RI "#define \fBTLS_AES_128_CCM_SHA256\fP   0x1304"
.br
.ti -1c
.RI "#define \fBTLS_AES_128_CCM_8_SHA256\fP   0x1305"
.br
.ti -1c
.RI "#define \fBX25519\fP   0x001d"
.br
.ti -1c
.RI "#define \fBSECP256R1\fP   0x0017"
.br
.ti -1c
.RI "#define \fBSECP384R1\fP   0x0018"
.br
.ti -1c
.RI "#define \fBSECP521R1\fP   0x0019"
.br
.ti -1c
.RI "#define \fBX448\fP   0x001e"
.br
.ti -1c
.RI "#define \fBKYBER768\fP   0x4242"
.br
.ti -1c
.RI "#define \fBHYBRID_KX\fP   0x421d"
.br
.ti -1c
.RI "#define \fBECDSA_SECP256R1_SHA256\fP   0x0403"
.br
.ti -1c
.RI "#define \fBECDSA_SECP256R1_SHA384\fP   0x0413"
.br
.ti -1c
.RI "#define \fBECDSA_SECP384R1_SHA384\fP   0x0503"
.br
.ti -1c
.RI "#define \fBRSA_PSS_RSAE_SHA256\fP   0x0804"
.br
.ti -1c
.RI "#define \fBRSA_PSS_RSAE_SHA384\fP   0x0805"
.br
.ti -1c
.RI "#define \fBRSA_PSS_RSAE_SHA512\fP   0x0806"
.br
.ti -1c
.RI "#define \fBRSA_PKCS1_SHA256\fP   0x0401"
.br
.ti -1c
.RI "#define \fBRSA_PKCS1_SHA384\fP   0x0501"
.br
.ti -1c
.RI "#define \fBRSA_PKCS1_SHA512\fP   0x0601"
.br
.ti -1c
.RI "#define \fBED25519\fP   0x0807"
.br
.ti -1c
.RI "#define \fBDILITHIUM2\fP   0x0902"
.br
.ti -1c
.RI "#define \fBDILITHIUM3\fP   0x0903"
.br
.ti -1c
.RI "#define \fBDILITHIUM2_P256\fP   0x09F2"
.br
.ti -1c
.RI "#define \fBPSKOK\fP   0x00"
.br
.ti -1c
.RI "#define \fBPSKWECDHE\fP   0x01"
.br
.ti -1c
.RI "#define \fBTLS_FULL_HANDSHAKE\fP   1"
.br
.ti -1c
.RI "#define \fBTLS_EXTERNAL_PSK\fP   2"
.br
.ti -1c
.RI "#define \fBTLS1_0\fP   0x0301"
.br
.ti -1c
.RI "#define \fBTLS1_2\fP   0x0303"
.br
.ti -1c
.RI "#define \fBTLS1_3\fP   0x0304"
.br
.ti -1c
.RI "#define \fBSERVER_NAME\fP   0x0000"
.br
.ti -1c
.RI "#define \fBSUPPORTED_GROUPS\fP   0x000a"
.br
.ti -1c
.RI "#define \fBSIG_ALGS\fP   0x000d"
.br
.ti -1c
.RI "#define \fBSIG_ALGS_CERT\fP   0x0032"
.br
.ti -1c
.RI "#define \fBKEY_SHARE\fP   0x0033"
.br
.ti -1c
.RI "#define \fBPSK_MODE\fP   0x002d"
.br
.ti -1c
.RI "#define \fBPRESHARED_KEY\fP   0x0029"
.br
.ti -1c
.RI "#define \fBTLS_VER\fP   0x002b"
.br
.ti -1c
.RI "#define \fBCOOKIE\fP   0x002c"
.br
.ti -1c
.RI "#define \fBEARLY_DATA\fP   0x002a"
.br
.ti -1c
.RI "#define \fBMAX_FRAG_LENGTH\fP   0x0001"
.br
.ti -1c
.RI "#define \fBPADDING\fP   0x0015"
.br
.ti -1c
.RI "#define \fBAPP_PROTOCOL\fP   0x0010"
.br
.ti -1c
.RI "#define \fBRECORD_SIZE_LIMIT\fP   0x001c"
.br
.ti -1c
.RI "#define \fBHSHAKE\fP   0x16"
.br
.ti -1c
.RI "#define \fBAPPLICATION\fP   0x17"
.br
.ti -1c
.RI "#define \fBALERT\fP   0x15"
.br
.ti -1c
.RI "#define \fBCHANGE_CIPHER\fP   0x14"
.br
.ti -1c
.RI "#define \fBTIMED_OUT\fP   0x01"
.br
.ti -1c
.RI "#define \fBCLIENT_HELLO\fP   0x01"
.br
.ti -1c
.RI "#define \fBSERVER_HELLO\fP   0x02"
.br
.ti -1c
.RI "#define \fBCERTIFICATE\fP   0x0b"
.br
.ti -1c
.RI "#define \fBCERT_REQUEST\fP   0x0d"
.br
.ti -1c
.RI "#define \fBCERT_VERIFY\fP   0x0f"
.br
.ti -1c
.RI "#define \fBFINISHED\fP   0x14"
.br
.ti -1c
.RI "#define \fBENCRYPTED_EXTENSIONS\fP   0x08"
.br
.ti -1c
.RI "#define \fBTICKET\fP   0x04"
.br
.ti -1c
.RI "#define \fBKEY_UPDATE\fP   0x18"
.br
.ti -1c
.RI "#define \fBMESSAGE_HASH\fP   0xFE"
.br
.ti -1c
.RI "#define \fBEND_OF_EARLY_DATA\fP   0x05"
.br
.ti -1c
.RI "#define \fBHANDSHAKE_RETRY\fP   0x102"
.br
.ti -1c
.RI "#define \fBNOT_TLS1_3\fP   \-2"
.br
.ti -1c
.RI "#define \fBBAD_CERT_CHAIN\fP   \-3"
.br
.ti -1c
.RI "#define \fBID_MISMATCH\fP   \-4"
.br
.ti -1c
.RI "#define \fBUNRECOGNIZED_EXT\fP   \-5"
.br
.ti -1c
.RI "#define \fBBAD_HELLO\fP   \-6"
.br
.ti -1c
.RI "#define \fBWRONG_MESSAGE\fP   \-7"
.br
.ti -1c
.RI "#define \fBMISSING_REQUEST_CONTEXT\fP   \-8"
.br
.ti -1c
.RI "#define \fBAUTHENTICATION_FAILURE\fP   \-9"
.br
.ti -1c
.RI "#define \fBBAD_RECORD\fP   \-10"
.br
.ti -1c
.RI "#define \fBBAD_TICKET\fP   \-11"
.br
.ti -1c
.RI "#define \fBNOT_EXPECTED\fP   \-12"
.br
.ti -1c
.RI "#define \fBCA_NOT_FOUND\fP   \-13"
.br
.ti -1c
.RI "#define \fBCERT_OUTOFDATE\fP   \-14"
.br
.ti -1c
.RI "#define \fBMEM_OVERFLOW\fP   \-15"
.br
.ti -1c
.RI "#define \fBFORBIDDEN_EXTENSION\fP   \-16"
.br
.ti -1c
.RI "#define \fBMAX_EXCEEDED\fP   \-17"
.br
.ti -1c
.RI "#define \fBEMPTY_CERT_CHAIN\fP   \-18"
.br
.ti -1c
.RI "#define \fBSELF_SIGNED_CERT\fP   \-20"
.br
.ti -1c
.RI "#define \fBBAD_MESSAGE\fP   \-23"
.br
.ti -1c
.RI "#define \fBILLEGAL_PARAMETER\fP   0x2F"
.br
.ti -1c
.RI "#define \fBUNEXPECTED_MESSAGE\fP   0x0A"
.br
.ti -1c
.RI "#define \fBDECRYPT_ERROR\fP   0x33"
.br
.ti -1c
.RI "#define \fBBAD_CERTIFICATE\fP   0x2A"
.br
.ti -1c
.RI "#define \fBUNSUPPORTED_EXTENSION\fP   0x6E"
.br
.ti -1c
.RI "#define \fBUNKNOWN_CA\fP   0x30"
.br
.ti -1c
.RI "#define \fBCERTIFICATE_EXPIRED\fP   0x2D"
.br
.ti -1c
.RI "#define \fBPROTOCOL_VERSION\fP   0x46"
.br
.ti -1c
.RI "#define \fBDECODE_ERROR\fP   0x32"
.br
.ti -1c
.RI "#define \fBRECORD_OVERFLOW\fP   0x16"
.br
.ti -1c
.RI "#define \fBCLOSE_NOTIFY\fP   0x00"
.br
.ti -1c
.RI "#define \fBLOG_OUTPUT_TRUNCATION\fP   256"
.br
.ti -1c
.RI "#define \fBTLS13_DISCONNECTED\fP   0"
.br
.ti -1c
.RI "#define \fBTLS13_CONNECTED\fP   1"
.br
.ti -1c
.RI "#define \fBTLS_FAILURE\fP   0"
.br
.ti -1c
.RI "#define \fBTLS_SUCCESS\fP   1"
.br
.ti -1c
.RI "#define \fBTLS_RESUMPTION_REQUIRED\fP   2"
.br
.ti -1c
.RI "#define \fBTLS_EARLY_DATA_ACCEPTED\fP   3"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint8_t \fBbyte\fP"
.br
.ti -1c
.RI "typedef int8_t \fBsign8\fP"
.br
.ti -1c
.RI "typedef int16_t \fBsign16\fP"
.br
.ti -1c
.RI "typedef int32_t \fBsign32\fP"
.br
.ti -1c
.RI "typedef int64_t \fBsign64\fP"
.br
.ti -1c
.RI "typedef uint32_t \fBunsign32\fP"
.br
.ti -1c
.RI "typedef uint64_t \fBunsign64\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Main TLS 1\&.3 Header File for constants and structures\&. 


.PP
\fBAuthor\fP
.RS 4
Mike Scott  
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define ALERT   0x15"
Alert record 
.SS "#define ALLOW_SELF_SIGNED"
allow self-signed server cert 
.SS "#define APP_PROTOCOL   0x0010"
Application Layer Protocol Negotiation (ALPN) 
.SS "#define APPLICATION   0x17"
Application record 
.SS "#define AUTHENTICATION_FAILURE   \-9"
Authentication error - AEAD Tag incorrect 
.SS "#define BAD_CERT_CHAIN   \-3"
Bad Certificate Chain error 
.SS "#define BAD_CERTIFICATE   0x2A"
Bad certificate alert 
.SS "#define BAD_HELLO   \-6"
badly formed Hello message error 
.SS "#define BAD_MESSAGE   \-23"
Badly formed message 
.SS "#define BAD_RECORD   \-10"
Badly formed Record received 
.SS "#define BAD_TICKET   \-11"
Badly formed Ticket received 
.SS "#define CA_NOT_FOUND   \-13"
Certificate Authority not found 
.SS "#define CERT_OUTOFDATE   \-14"
Certificate Expired 
.SS "#define CERT_REQUEST   0x0d"
Certificate Request 
.SS "#define CERT_VERIFY   0x0f"
Certificate Verify message 
.SS "#define CERTIFICATE   0x0b"
Certificate message 
.SS "#define CERTIFICATE_EXPIRED   0x2D"
Certificate Expired 
.SS "#define CHANGE_CIPHER   0x14"
Change Cipher record 
.SS "#define CLIENT_CERT   \fBECC_SS\fP"
Indicate capability of authenticating with a cert plus signing key 
.SS "#define CLIENT_HELLO   0x01"
Client Hello message 
.SS "#define CLOSE_NOTIFY   0x00"
Orderly shut down of connection 
.SS "#define COOKIE   0x002c"
Cookie extension 
.SS "#define CRYPTO_SETTING   \fBTYPICAL\fP"
Determine Cryptography settings 
.SS "#define DECODE_ERROR   0x32"
Decode error alert 
.SS "#define DECRYPT_ERROR   0x33"
Decryption error alert 
.SS "#define DILITHIUM2   0x0902"
Dilithium2 Signature algorithm 
.SS "#define DILITHIUM2_P256   0x09F2"
Dilithium2+SECP256R1 Signature algorithms - this type can be negotiated, but always implemented seperately by SAL 
.SS "#define DILITHIUM3   0x0903"
Dilithium3 Signature algorithm 
.SS "#define DLT_SS   3"
self signed Dilithium cert 
.SS "#define EARLY_DATA   0x002a"
Early Data extension 
.SS "#define ECC_SS   2"
self signed ECC cert 
.SS "#define ECDSA_SECP256R1_SHA256   0x0403"
Supported ECDSA Signature algorithm 
.SS "#define ECDSA_SECP256R1_SHA384   0x0413"
Non-standard ECDSA Signature algorithm 
.SS "#define ECDSA_SECP384R1_SHA384   0x0503"
Supported ECDSA Signature algorithm 
.SS "#define ED25519   0x0807"
Ed25519 EdDSA Signature algorithm 
.SS "#define EMPTY_CERT_CHAIN   \-18"
Empty Certificate Message 
.SS "#define ENCRYPTED_EXTENSIONS   0x08"
Encrypted Extensions message 
.SS "#define END_OF_EARLY_DATA   0x05"
End of Early Data message 
.SS "#define FINISHED   0x14"
Handshake Finished message 
.SS "#define FORBIDDEN_EXTENSION   \-16"
Forbidden Encrypted Extension 
.SS "#define HANDSHAKE_RETRY   0x102"
Handshake retry 
.SS "#define HSHAKE   0x16"
Handshake record 
.SS "#define HW_1   4"
RP2040 1 Hardware cert 
.SS "#define HW_2   5"
RP2040 2 Hardware cert 
.SS "#define HYB_SS   6"
self signed Hybrid cert (Dilithium+ECC) 
.SS "#define HYBRID   3"
Hybrid, Kyber/Dilithium + X25519 
.SS "#define HYBRID_KX   0x421d"
Hybrid key exchange, Kyber+X25519 
.SS "#define ID_MISMATCH   \-4"
Session ID mismatch error 
.SS "#define ILLEGAL_PARAMETER   0x2F"
Illegal parameter alert 
.SS "#define IO_APPLICATION   1"
just print application traffic 
.SS "#define IO_DEBUG   3"
print lots of debug information + protocol progress + application progress 
.SS "#define IO_NONE   0"
Run silently 
.SS "#define IO_PROTOCOL   2"
print protocol progress + application traffic 
.SS "#define IO_WIRE   4"
print lots of debug information + protocol progress + application progress + bytes on the wire 
.SS "#define KEY_SHARE   0x0033"
Key Share extension 
.SS "#define KEY_UPDATE   0x18"
Key Update message 
.SS "#define KYBER768   0x4242"
Kyber PQ key exchange - NOTE I just made this up! Not generally recognised! 
.SS "#define LOG_OUTPUT_TRUNCATION   256"
Output Hex digits before truncation 
.SS "#define MAX_EXCEEDED   \-17"
Maximum record size exceeded 
.SS "#define MAX_FRAG_LENGTH   0x0001"
max fragmentation length extension 
.SS "#define MEM_OVERFLOW   \-15"
Memory Overflow 
.SS "#define MESSAGE_HASH   0xFE"
Special synthetic message hash message 
.SS "#define MISSING_REQUEST_CONTEXT   \-8"
Request context missing error 
.SS "#define NOCERT   0"
Don't have a Client Cert 
.SS "#define NOT_EXPECTED   \-12"
Received ack for something not requested 
.SS "#define NOT_TLS1_3   \-2"
Wrong version error, not TLS1\&.3 
.SS "#define PADDING   0x0015"
Padding extension 
.SS "#define POST_QUANTUM   2"
Post quantum (Dilithium+Kyber?) 
.SS "#define PRESHARED_KEY   0x0029"
Preshared key extension 
.SS "#define PROTOCOL_VERSION   0x46"
Wrong TLS version 
.SS "#define PSK_MODE   0x002d"
Preshared key mode extension 
.SS "#define PSKOK   0x00"
Preshared Key only mode 
.SS "#define PSKWECDHE   0x01"
Preshared Key with Diffie-Hellman key exchange mode 
.SS "#define RECORD_OVERFLOW   0x16"
Record Overflow 
.SS "#define RECORD_SIZE_LIMIT   0x001c"
Record Size Limit 
.SS "#define RSA_PKCS1_SHA256   0x0401"
Supported RSA Signature algorithm 
.SS "#define RSA_PKCS1_SHA384   0x0501"
Supported RSA Signature algorithm 
.SS "#define RSA_PKCS1_SHA512   0x0601"
Supported RSA Signature algorithm 
.SS "#define RSA_PSS_RSAE_SHA256   0x0804"
Supported RSA Signature algorithm 
.SS "#define RSA_PSS_RSAE_SHA384   0x0805"
Supported RSA Signature algorithm 
.SS "#define RSA_PSS_RSAE_SHA512   0x0806"
Supported RSA Signature algorithm 
.SS "#define RSA_SS   1"
self signed RSA cert 
.SS "#define SECP256R1   0x0017"
NIST SECP256R1 elliptic curve key exchange 
.SS "#define SECP384R1   0x0018"
NIST SECP384R1 elliptic curve key exchange 
.SS "#define SECP521R1   0x0019"
NIST SECP521R1 elliptic curve key exchange 
.SS "#define SELF_SIGNED_CERT   \-20"
Self signed certificate 
.SS "#define SERVER_HELLO   0x02"
Server Hello message 
.SS "#define SERVER_NAME   0x0000"
Server Name extension 
.SS "#define SIG_ALGS   0x000d"
Signature algorithms extension 
.SS "#define SIG_ALGS_CERT   0x0032"
Signature algorithms Certificate extension 
.SS "#define SUPPORTED_GROUPS   0x000a"
Supported Group extension 
.SS "#define THIS_YEAR   2022"
Set to this year - crudely used to deprecate old certificates 
.SS "#define TICKET   0x04"
Ticket message 
.SS "#define TIMED_OUT   0x01"
Time-out 
.br
 
.SS "#define TINY_ECC   0"
ECC keys only 
.SS "#define TLS13_CONNECTED   1"
TLS1\&.3 Connection is made 
.SS "#define TLS13_DISCONNECTED   0"
TLS1\&.3 Connection is broken 
.SS "#define TLS1_0   0x0301"
TLS 1\&.0 version 
.SS "#define TLS1_2   0x0303"
TLS 1\&.2 version 
.SS "#define TLS1_3   0x0304"
TLS 1\&.3 version 
.SS "#define TLS_AES_128_CCM_8_SHA256   0x1305"
AES/SHA256/CCM 8 cipher suite - optional 
.SS "#define TLS_AES_128_CCM_SHA256   0x1304"
AES/SHA256/CCM cipher suite - optional 
.SS "#define TLS_AES_128_GCM_SHA256   0x1301"
AES128/SHA256/GCM cipher suite - this is only one which MUST be implemented 
.SS "#define TLS_AES_256_GCM_SHA384   0x1302"
AES256/SHA384/GCM cipher suite 
.SS "#define TLS_APPLICATION_PROTOCOL   (char *)('http/1\&.1')"
Support ALPN protocol 
.SS "#define TLS_CHACHA20_POLY1305_SHA256   0x1303"
CHACHA20/SHA256/POLY1305 cipher suite 
.SS "#define TLS_EARLY_DATA_ACCEPTED   3"
Connection succeeded, and early data was accepted 
.SS "#define TLS_EXTERNAL_PSK   2"
External Pre-Shared Key 
.SS "#define TLS_FAILURE   0"
Failed to cmake TLS1\&.3 connection 
.SS "#define TLS_FULL_HANDSHAKE   1"
Came from Full Handshake 
.SS "#define TLS_MAX_CERT_B64   2800"
In base64 - current max for root CAs is 2688 
.SS "#define TLS_MAX_CERT_SIZE   2048"
I checked - current max for root CAs is 2016 
.SS "#define TLS_MAX_CIPHER_FRAG   (16384+256)"
Max Ciphertext Fragment size 
.SS "#define TLS_MAX_CIPHER_SUITES   5"
Max number of supported cipher suites 
.SS "#define TLS_MAX_CLIENT_CHAIN_LEN   1"
Maximum Client Certificate chain length - one self signed here 
.SS "#define TLS_MAX_CLIENT_CHAIN_SIZE   (\fBTLS_MAX_CLIENT_CHAIN_LEN\fP*\fBTLS_MAX_CERT_SIZE\fP)"
Maximum Client Certificate chain length in bytes 
.SS "#define TLS_MAX_COOKIE   128"
Max Cookie size 
.SS "#define TLS_MAX_ECC_FIELD   66"
Max ECC field size in bytes 
.SS "#define TLS_MAX_EXT_LABEL   256"
Max external psk label size 
.SS "#define TLS_MAX_EXTENSIONS   2048"
Max extensions size 
.SS "#define TLS_MAX_FRAG   4"
Max Fragment length desired - 1 for 512, 2 for 1024, 3 for 2048, 4 for 4096, 0 for 16384 
.SS "#define TLS_MAX_HASH   64"
Maximum hash output length in bytes 
.SS "#define TLS_MAX_HASH_STATE   768"
Maximum memory required to store hash function state 
.SS "#define TLS_MAX_HELLO   1024"
Max client hello size (less extensions) KEX public key is largest component 
.SS "#define TLS_MAX_IO_SIZE   (16384+256)"
Maximum Input/Output buffer size\&. We will want to reduce this as much as possible! But must be large enough to take full certificate chain 
.SS "#define TLS_MAX_IV_SIZE   12"
Max IV size in bytes 
.SS "#define TLS_MAX_KEX_CIPHERTEXT_SIZE   97"
Max key exchange (KEM) ciphertext size ECC 
.SS "#define TLS_MAX_KEX_PUB_KEY_SIZE   97"
Max key exchange public key size in bytes ECC 
.SS "#define TLS_MAX_KEX_SECRET_KEY_SIZE   48"
Max key exchange private key size in bytes ECC 
.SS "#define TLS_MAX_KEY   32"
Maximum key length in bytes 
.SS "#define TLS_MAX_PLAIN_FRAG   16384"
Max Plaintext Fragment size 
.SS "#define TLS_MAX_PSK_MODES   2"
Max preshared key modes 
.SS "#define TLS_MAX_SERVER_CHAIN_LEN   2"
Maximum Server Certificate chain length - omitting root CA 
.SS "#define TLS_MAX_SERVER_CHAIN_SIZE   (\fBTLS_MAX_SERVER_CHAIN_LEN\fP*\fBTLS_MAX_CERT_SIZE\fP)"
Maximum Server Certificate chain length in bytes 
.SS "#define TLS_MAX_SERVER_NAME   128"
Max server name size in bytes 
.SS "#define TLS_MAX_SHARED_SECRET_SIZE   256"
Max key exchange Shared secret size 
.SS "#define TLS_MAX_SIG_PUB_KEY_SIZE   512"
Max signature public key size in bytes RSA 
.SS "#define TLS_MAX_SIG_SECRET_KEY_SIZE   512"
Max signature private key size in bytes RSA 
.SS "#define TLS_MAX_SIGNATURE_SIZE   512"
Max digital signature size in bytes RSA 
.SS "#define TLS_MAX_SUPPORTED_GROUPS   10"
Max number of supported crypto groups 
.SS "#define TLS_MAX_SUPPORTED_SIGS   16"
Max number of supported signature schemes 
.SS "#define TLS_MAX_TAG_SIZE   16"
Max HMAC tag length in bytes 
.SS "#define TLS_MAX_TICKET_SIZE   1024"
maximum resumption ticket size - beware some servers send much bigger tickets! 
.SS "#define TLS_RESUMPTION_REQUIRED   2"
Connection succeeded, but handshake retry was needed 
.SS "#define TLS_SHA256_T   1"
SHA256 hash 
.br
 
.SS "#define TLS_SHA384_T   2"
SHA384 hash 
.br
 
.SS "#define TLS_SHA512_T   3"
SHA512 hash 
.br
 
.SS "#define TLS_SUCCESS   1"
Succeeded in making TLS1\&.3 connection 
.SS "#define TLS_VER   0x002b"
TLS version extension 
.SS "#define TLS_X509_MAX_FIELD   256"
Maximum X\&.509 field size 
.SS "#define TRY_EARLY_DATA"
Try to send early data on resumptions 
.SS "#define TYPICAL   1"
Mixture of RSA and ECC - for use with most standard web servers 
.SS "#define UNEXPECTED_MESSAGE   0x0A"
Unexpected message alert 
.SS "#define UNKNOWN_CA   0x30"
Unrecognised Certificate Authority 
.SS "#define UNRECOGNIZED_EXT   \-5"
Unrecognised extension error 
.SS "#define UNSUPPORTED_EXTENSION   0x6E"
Unsupported extension alert 
.SS "#define VERBOSITY   \fBIO_PROTOCOL\fP"
Set to level of output information desired - see above 
.SS "#define WRONG_MESSAGE   \-7"
Message out-of-order error 
.SS "#define X25519   0x001d"
X25519 elliptic curve key exchange 
.SS "#define X448   0x001e"
X448 elliptic curve key exchange 
.SH "Typedef Documentation"
.PP 
.SS "typedef uint8_t \fBbyte\fP"
8-bit unsigned integer 
.SS "typedef int16_t \fBsign16\fP"
16-bit signed integer 
.SS "typedef int32_t \fBsign32\fP"
32-bit signed integer 
.SS "typedef int64_t \fBsign64\fP"
64-bit signed integer 
.SS "typedef int8_t \fBsign8\fP"
8-bit signed integer 
.SS "typedef uint32_t \fBunsign32\fP"
32-bit unsigned integer 
.SS "typedef uint64_t \fBunsign64\fP"
64-bit unsigned integer 
.SH "Author"
.PP 
Generated automatically by Doxygen for TiigerTLS from the source code\&.
